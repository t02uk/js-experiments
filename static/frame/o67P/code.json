{"source":{"css":"body { background-color: #000000; margin: 0px; overflow: hidden; }","html":"<canvas id='world'></canvas>\n","lisence":"MIT","js":"(function() {\n  \n  \n  \n  function Ribon() {\n    return this;\n  }\n  Ribon.prototype = {\n    capacity: 10,\n    init: function(ps, color) {\n      this.born = [];\n      for(var i = 0; i < this.capacity; i++) {\n        this.born[i] = new Born(ps);\n        this.born[i].act();\n      }\n      this.color = color;\n\n      return this;      \n    },\n    act: function() {\n     \n      var lhs = {x: px, y: py};\n      var rhs = this.born[0];\n        \n      var dx = lhs.x - rhs.x - rhs.sx;\n      var dy = lhs.y - rhs.y - rhs.sy;\n      \n      var direction = Math.atan2(dy, dx);\n      \n      rhs.sx += Math.cos(direction + 0.15) * 0.01;\n      rhs.sy += Math.sin(direction + 0.15) * 0.01;\n      \n      rhs.sx *= 0.99;\n      rhs.sy *= 0.99;\n\n      rhs.x += rhs.sx;\n      rhs.y += rhs.sy;\n      \n      for(var i = 1; i < this.capacity; i++) {\n        this.born[i].act();\n        this.born[i].x = (this.born[i-1].ox + this.born[i].x) / 2;\n        this.born[i].y = (this.born[i-1].oy + this.born[i].y) / 2;\n        this.born[i].sx = (this.born[i-1].x - this.born[i].x);\n        this.born[i].sy = (this.born[i-1].y - this.born[i].y);\n\n        if(Math.random() < 0.01) {\n          Ripple.registor(\n            {x: this.born[i].x,\n             y: this.born[i].y,\n             sx: Math.random() * 0.1 - 0.05,\n             sy: Math.random() * 0.1 - 0.05,\n             radius: 0.001,\n             color: this.color}\n          );\n        }\n      }\n      \n      rhs.act();\n      \n      return this;\n    },\n    draw: function(d) {\n      \n       d.rgb(this.color[0],\n             this.color[1],\n             this.color[2])\n        .alpha(0.3)\n          .blend(\"lighter\");\n\n      for(var i = 1; i < this.capacity; i++) {\n        var p1 = this.born[i-1];\n        var p2 = this.born[i];\n        \n        var s = 0.01;\n        \n        d.quads([\n          [p1.x + p1.ny * s, p1.y - p1.nx * s],\n          [p1.x - p1.ny * s, p1.y + p1.nx * s],\n          [p2.x - p2.ny * s, p2.y + p2.nx * s],\n          [p2.x + p2.ny * s, p2.y - p2.nx * s]\n        ]).fill();\n       }\n      \n      return this;\n    }\n  };\n  \n  function Ripple(o) {\n    this.x = o.x;\n    this.y = o.y;\n    this.sx = o.sx;\n    this.sy = o.sy;\n    this.radius = Math.random() * 0.001 + 0.0005;\n    this.color = o.color;\n    this.lineWidth = Math.random() * 0.03 + 0.02;\n    this.count = 0;\n  }\n  Ripple.items = [];\n  Ripple.registor = (function() {\n    var seq = 0;\n    var items = Ripple.items;\n    return function(o) {\n      var ret;\n      ret = items[seq] = new Ripple(o);\n      \n//      console.log(\"seq \" + seq);\n      seq++; seq &= 63;\n      \n      return ret;\n    };\n  })();\n  Ripple.prototype = {\n    act: function() {\n      this.x += this.sx;\n      this.y += this.sy;\n      \n      this.sx *= 0.95;\n      this.sy *= 0.95;\n      \n      return this;\n    },\n    draw: function(d) {\n      this.lineWidth -= 0.002;\n      if(this.lineWidth < 0) return;\n      d.rgb(this.color[0],\n            this.color[1],\n            this.color[2])\n       .lineWidth(this.lineWidth)\n        .alpha(this.lineWidth * 10.0);\n      \n      d.circle(\n        [this.x, this.y],\n        this.radius\n      ).stroke();\n      this.count++;\n      this.radius += 0.01;\n      return this;\n    }        \n  };\n  \n  \n  function Born(ps) {\n    this.x = ps.x || 0.0;\n    this.y = ps.y || 0.0;\n    this.sx = this.sy = 0.0;\n    return this;\n  }\n  Born.prototype = {\n    draw: function(d) {\n\n      var s = 0.1;\n      d.quads([\n        [this.x - s, this.y - s],\n        [this.x + s, this.y - s],\n        [this.x + s, this.y + s],\n        [this.x - s, this.y + s]\n      ]).fill().stroke();\n      return this;\n    },\n    act: function() {\n      \n      this.ox = this.x;\n      this.oy = this.y;\n      \n      var sp = Math.sqrt(this.sx * this.sx + this.sy * this.sy);\n      if(sp !== 0.0) {\n        this.nx = this.sx / sp;\n        this.ny = this.sy / sp;\n      } else {\n        this.nx = 0.0;\n        this.ny = 0.0;\n      }\n          \n      return this;\n    }\n  };\n  \n      \n      \n  var main = function() {\n    \n    window.px = 0.5;\n    window.py = 0.5;\n    document.addEventListener(\"mousemove\", function(e) {\n      px = e.clientX / d.width + d.left2d;\n      py = e.clientY / d.height + d.top2d;\n    }, false);\n  \n    var d = new DCore().init();\n  \n    var rs = [];\n    for(var i = 0; i < 7; i++) {\n      rs[i] = new Ribon().init(\n        {\n          x: Math.random(),\n          y: Math.random()\n        },\n          [\n          [0xff, 0x66, 0x66],\n          [0xff, 0xaa, 0x66],\n          [0xff, 0xff, 0x66],\n          [0x66, 0xff, 0x66],\n          [0x66, 0x33, 0xff],\n          [0x33, 0x66, 0xaa],\n          [0xff, 0x66, 0xff]\n          ][i]\n      );\n    }\n    (function() {\n      d.rgb(10, 20, 30)\n        .alpha(1.0)\n          .blend(\"source-over\")\n            .fillBack();\n\n      for(var i = 0; i < rs.length; i++) {\n        var r = rs[i];\n        r.act().draw(d);\n      }\n      \n      for(var i = 0; i < 64; i++) {\n        var ripple = Ripple.items[i];\n        if(!ripple) continue;\n        ripple.act().draw(d);\n      }\n      //console.log(\"cap \" + i)\n          \n      window.setTimeout(arguments.callee, 33);\n    \n    })();\n  };\n  \n  try {\n    main();\n  } catch(e) {\n//    alert(\"Error:\" + e.message);\n    throw e;\n  }\n})();\n"},"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/o/6/7/o67P_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/o/6/7/o67P.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/o/6/7/o67P_100.jpg"},"description_html":"はじめてのHTML5","modified_date":"2010-09-23 11:30:21","uid":"o67P","created_date":"2010-09-11 23:04:05","path":"o67P","description":"はじめてのHTML5","statistic":{"forked":"3","favorite":"3","pageview":"2433"},"user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/b/4/2/c/b42cc3dd3312505b680411b3ead08e2dbc4192e4_100.jpg","name":"crispy"},"url":"http://jsdo.it/crispy/o67P","title":"Ribon & Shabon"}