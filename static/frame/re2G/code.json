{"source":{"css":"body { background-color: #000000; margin: 0px; overflow: hidden; }","html":"<canvas id='world'></canvas>","lisence":"MIT","js":"// forked from Event's \"Instrument\" http://jsdo.it/Event/jam_session4\n/*\n※お題のプログラムで使用している音源の、当イベント以外での使用を禁じます。\nそれ以外の音源の使用は自由ですので、他に使用した音源がありましたら、権利をご確認の上各自ご用意下さい。\nなお、当イベントでは、音源のアップロード場所として、こえ部(http://koebu.com/)のご利用を推奨いたします。\n* mp3 files used in the code are not allowed to use outside wonderfl.net/jsdo.it\nYou're free to use your own sound source for JAM, if you have rights to use it.\nWe recommend soundcloud.com to upload music.\n\n\n* ogg files are available from\n\nhttp://jsrun.it/sounds/event/jam/drop1.ogg\nhttp://jsrun.it/sounds/event/jam/drop2.ogg\nhttp://jsrun.it/sounds/event/jam/drop3.ogg\nhttp://jsrun.it/sounds/event/jam/drop4.ogg\nhttp://jsrun.it/sounds/event/jam/drop5.ogg\nhttp://jsrun.it/sounds/event/jam/drop6.ogg\nhttp://jsrun.it/sounds/event/jam/drop7.ogg\nhttp://jsrun.it/sounds/event/jam/drop8.ogg\nhttp://jsrun.it/sounds/event/jam/drop9.ogg\nhttp://jsrun.it/sounds/event/jam/drop10.ogg\n\n* mp3 files are available from\n\nhttp://jsrun.it/sounds/event/jam/drop1.mp3\nhttp://jsrun.it/sounds/event/jam/drop2.mp3\nhttp://jsrun.it/sounds/event/jam/drop3.mp3\nhttp://jsrun.it/sounds/event/jam/drop4.mp3\nhttp://jsrun.it/sounds/event/jam/drop5.mp3\nhttp://jsrun.it/sounds/event/jam/drop6.mp3\nhttp://jsrun.it/sounds/event/jam/drop7.mp3\nhttp://jsrun.it/sounds/event/jam/drop8.mp3\nhttp://jsrun.it/sounds/event/jam/drop9.mp3\nhttp://jsrun.it/sounds/event/jam/drop10.mp3\n*/\n(function(){\n  \n  Object.extend(Array.prototype, {\n    chain: function(f) {\n      var ret = _V(this[0]);\n      if(f(ret)) return ret;\n      \n      for(var i = 1, l = this.length; i < l; i++) {\n        ret = _V(this[i], ret);\n        if(f.apply(ret)) return ret;\n      }\n      return ret;\n    },\n    \n    andThen: function() {\n      return this.chain(function(e) {return e === null;});\n    },\n\n    orThen: function() {\n      return this.chain(function(e) {return e !== null;});\n    }\n  });\n  \n  Object.extend(Number.prototype, {\n    toRadian: function() {\n      return 2.0 * Math.PI * this;\n    }\n  });\n  \n  \n  var loadAudio = function() {\n    var sacrifice = document.createElement('audio');\n    if (!sacrifice) {\n      alert('Your browser does not support <audio>!');\n      return;\n    }\n    function checkSupportFor(type) {\n      var cpt = sacrifice.canPlayType(type);\n      return (cpt !== \"no\") && (cpt !== \"\");\n    }\n    var supports_mp3 = checkSupportFor(\"audio/mp3\");\n    var supports_ogg = checkSupportFor(\"audio/ogg\");\n    \n    if (!(supports_mp3 || supports_ogg)) {\n      alert('Your browser supports neither mp3 nor ogg!');\n      return;\n    }\n        \n    // load audio\n    var instruments =\n      $R(1, 10).map(function(e) {\n        return new Audio(\"http://jsrun.it/sounds/event/jam/drop\" + e + (supports_ogg ? \".ogg\" : \".mp3\"));\n      }).concat(\n         [\"hat\", \"snare\", \"bass\"].map(function(e) {\n           return new Audio(\"http://dl.dropbox.com/u/3589634/resource/se/\" + e + (supports_ogg ? \".ogg\" : \".mp3\"));\n      }));\n\n    instruments.each(function(e) {\n      e.addEventListener(\"canplay\", function() {\n        e.playable = true;\n      }, true);\n      e.load();\n    });\n    return instruments;\n  };\n  \n  var measure = 16;\n  var pitchMax = 13;\n  var audioBufferCap = 2;\n \n  var d = new DCore().init();\n  \n  // exntend Number\n  Object.extend(Array.prototype, {\n    translate: function(a) {\n      if(!(a instanceof Array)) a = Array.prototype.slice.call(arguments);\n      \n      return this.map(function(x) {\n        return x.zip2(a, function(e) {\n          return e[0] + e[1];\n        });\n      });\n    },\n    rotate: function(radian) {\n      if(this.length === 0) return this;\n      else if(this[0] instanceof Array) return this.map(function(e) {return e.rotate(radian);});\n      else if(this.length !== 2) return this;\n      else return [this[0] * Math.cos(radian) - this[1] * Math.sin(radian),\n                   this[0] * Math.sin(radian) + this[1] * Math.cos(radian)];\n    },\n    scale: function(a) {\n      if(!(a instanceof Array)) a = Array.prototype.slice.call(arguments);\n      return this.map(function(x) {\n        return x.zip2(a, function(e) {\n          return e[0] * e[1];\n        });\n      });\n    }\n  });\n\n  \n  \n  var counter = function counter(max) {\n    var count = 0;\n    return function() {\n      if(count > max) return null;\n      else return count++;\n    };\n  };\n\n  var Motion = {\n    counter: counter.curry(4),\n    normal: function(args) {\n      var count = args[0], shape = args[1];\n      return [count, shape];\n    },\n    born: function(args) {\n      return Motion.shake(args);\n    },\n    rotate: function(args) {\n      var count = args[0], shape = args[1];\n      var rad = (count / 4 / 4).toRadian();\n      return [count, shape.rotate(rad)];\n    },\n    scale: function(args) {\n      var count = args[0], shape = args[1];\n      var s = (Math.sin((count / 8).toRadian())) * 0.6;\n      return [count, shape.scale(1 + s, 1 + s)];\n    },\n    shake: function(args) {\n      var count = args[0], shape = args[1];\n      var f = 0.1 * (4 - count);\n      var x = (Math.random() - 0.5) * f;\n      var y = (Math.random() - 0.5) * f;\n      return [count, shape.scale(1 + x, 1 + y)];\n    },\n    upset: function(args) {\n      var count = args[0], shape = args[1];\n      var s = Math.cos((count / 9).toRadian());\n      return [count, shape.scale(1, s)];\n    }\n  };\n\n  function Score() {\n    this.seek = 0;\n    this.fineSeek = 0;\n    this.notes = $R(0, measure - 1).map(function(pos) {\n      return $R(0, pitchMax - 1).map(function(inst) {\n        return new Note(pos / (measure + 1) + Note.prototype.size * 2\n                      , (inst / pitchMax + Note.prototype.size * 2) * 0.85 + 0.05\n                      , instruments[pos % audioBufferCap][inst]\n                      , inst);\n      });\n    });\n  }\n  Score.prototype = {\n    fineSeekMax: 32,\n    click: function(px, py) {\n      this.notes.flatten().filter(function(e) {\n        return e.isInBoundOf(px, py);\n      }).each(function(e) {\n        e.flipFlop();\n        if(!e.killed) {\n          e.setMotion(Motion.born);\n//          e.play();\n        }\n      });\n    },\n    act: function() {\n      var self = this;\n      this.fineSeek++;\n      this.fineSeek %= this.fineSeekMax;\n      this.seek = ~~(this.fineSeek * measure / this.fineSeekMax);\n      var motion = [];\n      if(!this.notes[this.seek][10 + 0].killed) motion.push(Motion.rotate);\n      if(!this.notes[this.seek][10 + 1].killed) motion.push(Motion.upset);\n      if(!this.notes[this.seek][10 + 2].killed) motion.push(Motion.scale);\n      motion.push(Motion.shake);\n      \n      var actives = [];\n      if(this.fineSeek % (this.fineSeekMax / measure) === 0) {\n        this.notes[this.seek].each(function(e) {\n          if(!e.killed) {\n            e.setMotion(motion);\n            actives[[e.x, e.y].join(\",\")] = true;\n          }\n        });\n      }\n      \n      this.notes.flatten().each(function(e) {\n        e.act(actives[[e.x, e.y].join(\",\")]);\n      });\n    },\n    draw: function() {\n      this.notes.flatten().map(function(e) {\n        e.clear();\n        return e;\n      }).each(function(e) {\n        e.draw();\n      });\n    }\n  };\n\n  function Note(x, y, inst, pitch) {\n    this.x = x;\n    this.y = y;\n    this.killed = true;\n    this.mementoKilled = true;\n    this.setMotion(Motion.normal);\n    this.instrument = inst;\n    this.pitch = pitch;\n    this.mementoShape = [];\n    this.shape = [];\n    this.dirty = true;\n    this.playable = false;\n    this.mementoPlayable = false;\n  }\n\n  Note.prototype = {\n    size: 1.0 / measure / 2 * 0.55,\n    offsets: 0.008,\n    shapePrototype: [\n      [-1,-1],\n      [ 1,-1],\n      [ 1, 1],\n      [-1, 1]\n    ].scale(1.0 / measure / 2 * 0.55, 1.0 / measure / 2 * 0.55),\n    isInBoundOf: function(x, y) {\n      return this.x - this.size <= x && x <= this.x + this.size + this.offsets\n          && this.y - this.size <= y && y <= this.y + this.size + this.offsets;\n    },\n    baseMotion: function(count) {\n      return [count, Note.prototype.shapePrototype];\n    },\n    flipFlop: function() {\n      this.mementoKilled = this.killed;\n      this.killed ^= true;\n    },\n    setMotion: function(motion) {\n      this.motion = [\n        Motion.counter(),\n        this.baseMotion\n      ].concat(motion);\n    },\n    active: function(count) {\n    },\n    unactive: function(count) {\n    },\n    normal: function(count) {\n      return this.shapePrototype;\n    },\n    play: function() {\n      var inst = this.instrument;\n      if(inst) {\n        if(inst.playable) {\n          inst.currentTime = 0;\n          inst.play();\n        }\n      }\n    },\n    act: function(active) {\n      if(active) this.play();\n      \n      this.mementoPlayable = this.playable;\n      this.playable = this.instrument.playable;\n      \n\n      // save current shape as memento\n      this.mementoShape = this.shape;\n      \n      var temp = this.motion.andThen();\n      this.shape = temp === null ? this.shapePrototype : temp.last();\n\n      // shape changed\n      this.dirty = this.shape.toString()\n        !== this.mementoShape.toString()\n      this.dirty |= this.playable\n        !== this.mementoPlayable\n      this.dirty |= this.killed\n        !== this.mementoKilled;\n    },\n    clear: function() {\n      if(!this.dirty) return;\n      \n      var offsets = this.offsets;\n      var shape = this.mementoShape;\n      // rawed\n      d\n        .rgb(0xff, 0xff, 0xff)\n        .quads(shape.scale(1.1, 1.1).translate([this.x, this.y]).translate([offsets, offsets]))\n        .fill()\n        ;\n    },\n    draw: function() {\n     \n      if(!this.dirty) return;\n      if(!this.playable) return;\n\n      var offsets = this.offsets;\n      var shape = this.shape;\n      \n\n      if(this.killed) {\n        if(this.pitch < 10) d.rgb(0xff, 0xe3, 0xe3);\n        else d.rgb(0xe3, 0xe3, 0xff);\n      \n        // rawed\n        d\n          .quads(shape.translate([this.x, this.y]).translate([offsets, offsets]))\n          .fill()\n          ;\n      } else {\n        if(this.pitch < 10) d.rgb(0xff, 0x99, 0x99);\n        else d.rgb(0x99, 0x99, 0xff);\n    \n        d\n         .quads(shape.translate([this.x, this.y]).translate([offsets, offsets]))\n         .fill()\n        ;\n      }\n    }\n  };\n\n  var instruments = [];\n  (function() {\n    \n    instruments[0] = loadAudio();\n    if(!instruments[0]) return;\n    instruments[1] = loadAudio();\n    instruments[2] = loadAudio();\n    instruments[3] = loadAudio();\n    \n    // ovserve mouse\n    document.addEventListener(\"click\", function(e) {\n      var px = e.clientX / d.width - d.left2d;\n      var py = e.clientY / d.height - d.top2d;\n      score.click(px, py);\n    }, false);\n\n    var n = new Note(0.5, 0.5, 1);\n    var score = new Score();\n\n    d.rgb(0xff, 0xff, 0xff)\n     .fillBack();\n    \n    window.setInterval(\n      (function() {\n        \n        score.act();\n        \n        score.draw();\n        \n      }), 66);\n  })();\n})();"},"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/r/e/2/re2G_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/r/e/2/re2G.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/r/e/2/re2G_100.jpg"},"description_html":"富豪的プログラミングで作成したTENORI-ON風シーケンサ。<br />\n<br />\nFirefox対応、Chrome推奨。","parent":{"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/s/z/J/szJ7_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/s/z/J/szJ7.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/s/z/J/szJ7_100.jpg"},"modified_date":"2010-10-08 20:12:55","uid":"szJ7","created_date":"2010-10-08 19:06:10","path":"jam_session4","description":"※お題のプログラムで使用している音源の、当イベント以外での使用を禁じます。\nそれ以外の音源の使用は自由ですので、他に使用した音源がありましたら、権利をご確認の上各自ご用意下さい。\nなお、当イベントでは、音源のアップロード場所として、こえ部(http://koebu.com/)のご利用を推奨いたします。\n* mp3 files used in the code are not allowed to use outside wonderfl.net/jsdo.it\nYou're free to use your own sound source for JAM, if you have rights to use it.\nWe recommend soundcloud.com to upload music.","statistic":{"forked":"14","favorite":"1","pageview":"8475"},"user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/6/7/b/5/67b56e45ea501eedd27eec70435d26553c0eace6_100.jpg","name":"jsdo.it_team"},"url":"http://jsdo.it/jsdo.it_team/jam_session4","title":"Instrument"},"modified_date":"2011-07-17 14:34:18","uid":"re2G","created_date":"2010-10-09 21:35:16","path":"re2G","description":"富豪的プログラミングで作成したTENORI-ON風シーケンサ。\n\nFirefox対応、Chrome推奨。","statistic":{"forked":"0","favorite":"7","pageview":"3267"},"url":"http://jsdo.it/crispy/re2G","user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/b/4/2/c/b42cc3dd3312505b680411b3ead08e2dbc4192e4_100.jpg","name":"crispy"},"title":"IRON-NOTE"}