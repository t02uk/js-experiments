{"source":{"css":"body { background-color: #000; margin: 0px; overflow: hidden; }\n","html":"<canvas id='world'></canvas>","lisence":"MIT","js":"window.onload = (function() {\n\n\tvar d = new DCore();\n\tvar mouse = new Mouse(d);\n\n\t// AudioContext\n\t// 各ブラウザに実装されたAudioContextと同じメソッドを備える(一切何もしない)\n\tfunction MockAudioContext() {}\n\tMockAudioContext.prototype = {\n\t\tcreateJavaScriptNode: function() {\n\t\t\treturn {\n\t\t\t\tconnect : function(){}\n\t\t\t}\n\t\t}\n\t};\n\n\t// 簡易ミキサ\n\tfunction Mixer() {\n\t}\n\tMixer.prototype = {\n\t\t// 初期化処理\n\t\tprepare: function() {\n\t\t\tthis.ctx = new (window.AudioContext || window.webkitAudioContext || MockAudioContext)();\n\t\t\tthis.channel = 1;\n\t\t\tthis.bufferSize = 2 << 10;\n\n\t\t\tthis.node = this.ctx.createJavaScriptNode(this.bufferSize, 1, 1);\n\t\t\tthis.node.connect(this.ctx.destination);\n\n\t\t\tvar self = this;\n\n\t\t\tthis.waves = [];\n\t\t\t\n\t\t\tthis.node.onaudioprocess = function(evt) {\n\n\t\t\t\tvar sampleRate = evt.outputBuffer.sampleRate;\n\t\t\t\tvar length = evt.outputBuffer.length;\n\t\t\t\tvar buffer = evt.outputBuffer.getChannelData(0);\n\n\t\t\t\tfor(var i = 0; i < length; i++) {\n\t\t\t\t\tbuffer[i] *= 0.35;\n\t\t\t\t}\n\n\t\t\t\tfor(var i = 0; i < self.waves.length; i++) {\n\t\t\t\t\tvar alive = self.waves[i](buffer, sampleRate, length);\n\t\t\t\t\tif(!alive) {\n\t\t\t\t\t\tself.waves[i] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tself.waves = self.waves.compact();\n\n\t\t\t};\n\t\t},\n\t\tadd: function(functor) {\n\t\t\tthis.waves.push(functor);\n\t\t},\n\t\tupdate: function() {\n\t\t}\n\t};\n\tvar mixer = new Mixer();\n\tmixer.prepare();\n\t\n\t// グリッド(12x12のグリッドがあった場合、どの位置に当たるかを計算する)\n\tvar Grid = {};\n\tGrid.size = 12;\n\tGrid.xs = $R(0, Grid.size, true).map(function(i) { return i / Grid.size; });\n\tGrid.toCordinate = function(p) {\n\t\tvar unit = 1 / this.size;\n\t\treturn [~~(p[0] / unit), ~~(p[1] / unit)];\n\t};\n\n\n\t// エフェクト(波紋)\n\tfunction Effect(p, hue) {\n\t\tthis.p = p;\n\t\tthis.count = 0;\n\t\tthis.hue = hue;\n\t}\n\tEffect.prototype = {\n\t\tact: function() {\n\t\t\tthis.count++;\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar s = 0.2;\n\t\t\tvar a = this.count / 16;\n\t\t\ta *= a / 2;\n\t\t\tvar alpha = a;\n\t\t\tvar ar = (1 - a) * 0.3;\n\t\t\td\n\t\t\t .alpha(0.5)\n\t\t\t .blend(\"lighter\")\n\t\t\t .lineWidth(ar * s * 0.2)\n\t\t\t .hsv(this.hue, 0.85, 0.85)\n\t\t\t .circle(this.p, a * s + 0.001)\n\t\t\t .stroke()\n\t\t\t;\n\t\t},\n\t\talive: function() {\n\t\t\treturn this.count < 16;\n\t\t},\n\t};\n\n\t// エフェクト管理用クラス\n\tvar EffectManager = {\n\t\tinitialize: function() {\n\t\t\tthis.effects = [];\n\t\t},\n\t\tact: function() {\n\t\t\tthis.effects = this.effects.select(function(e) {\n\t\t\t\treturn e.alive();\n\t\t\t});\n\t\t\tthis.effects.invoke(\"act\");\n\t\t},\n\t\tdraw: function() {\n\t\t\tthis.effects.invoke(\"draw\");\n\t\t},\n\t\tadd: function(effect) {\n\t\t\tthis.effects.push(effect);\n\t\t},\n\t};\n\tEffectManager.initialize();\n\n\t// 音を鳴らしたり、波紋を描いたり\n\tfunction Note(p, wave, delay, volume, life, hue) {\n\t\tthis.p = p;\n\t\tthis.wave = wave;\n\t\tthis.count = 0 - delay;\n\t\tthis.volume = volume;\n\t\tthis.life = life;\n\t\tthis.hue = hue;\n\t}\n\tNote.prototype = {\n\t\tact: function() {\n\t\t\tif(this.count % 128 == 0) {\n\t\t\t\tmixer.add(this.wave(this.volume));\n\t\t\t\tEffectManager.add(new Effect(this.p, this.hue));\n\t\t\t\tthis.volume *= 0.5;\n\t\t\t}\n\t\t\tthis.count++;\n\t\t},\n\t\tdraw: function() {\n\t\t},\n\t\talive: function() {\n\t\t\treturn this.count < this.life;\n\t\t},\n\t};\n\n\n\t// 譜面管理\n\tvar Score = {\n\t\tinitialize: function() {\n\t\t\tthis.notes = new Array(128).fill([]);\n\t\t\tthis.idx = 0;\n\t\t},\n\t\tadd: function(note) {\n\t\t\tthis.notes[this.idx].push(note);\n\t\t},\n\t\teach: function(fn) {\n\t\t\tthis.notes.flatMap(function(note) {\n\t\t\t\tif(note && note.alive()) {\n\t\t\t\t\tfn(note);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tact: function() {\n\t\t\tfor(var i = 0; i < 128; i++) {\n\t\t\t\tthis.notes[i] = this.notes[i].select(function(x) {\n\t\t\t\t\treturn x.alive();\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.each(function(x) {\n\t\t\t\tx.act();\n\t\t\t});\n\t\t\tthis.idx++;\n\t\t\tthis.idx %= 128;\n\t\t},\n\t\tdraw: function() {\n\t\t\tthis.each(function(x) {\n\t\t\t\tx.draw();\n\t\t\t});\n\t\t},\n\t};\n\tScore.initialize();\n\n\t// 作曲家(主に、コード進行うんぬんが必要な音を担当)\n\tvar Composer = {\n\t\tcode: function(cord) {\n\t\t\tvar patterns = [\n\t\t\t\t[1, 3, 5]\t// C\n\t\t\t\t,[6, 10, 1]\t\t// F\n\t\t\t\t,[8, 12, 15]\t// G\n\t\t\t\t,[5, 8, 11, 13]\t// Em7\n\t\t\t\t,[3, 6, 10, 12]\t// Dm7-5\n\t\t\t\t,[4, 6, 10, 11]\t// Bm7-5\n\t\t\t\t,[5, 8, 11, 13]\t// Em7\n\t\t\t\t,[6, 10, 1]\t\t// F\n\t\t\t\t,[8, 12, 15]\t// G\n\t\t\t\t,[1, 3, 5]\t// C\n\t\t\t\t,[3, 6, 10, 12]\t// Dm7-5\n\t\t\t\t,[4, 6, 10, 11]\t// Bm7-5\n\t\t\t];\n\t\t\treturn patterns[cord[1] % patterns.length];\n\t\t},\n\t\telePi: function(c) {\n\t\t\tvar p = mouse.p;\n\t\t\tvar cord = Grid.toCordinate(p);\n\t\t\tvar pattern = this.code(cord);\n\t\t\t\n\t\t\tvar magicNumber = Math.pow(Math.E, Math.log(2) / 12);\n\t\t\tvar q = pattern[cord[0] % pattern.length];\n\t\t\tvar freq = Math.pow(magicNumber, q) * 440;\n\t\t\tvar x = q / 24;\n\t\t\tvar y = (c % 128) / 128;\n\t\t\tvar hue = (cord[1] % 6) / 6;\n\t\t\tScore.add(new Note([x, y], genSquare.curry(freq), 0, 0.45, 256, hue));\n\n\t\t},\n\t\tsynth: function(c) {\n\t\t\tvar p = mouse.p;\n\t\t\tvar cord = Grid.toCordinate(p);\n\t\t\tvar pattern = this.code(cord);\n\t\t\t\n\t\t\tvar magicNumber = Math.pow(Math.E, Math.log(2) / 12);\n\t\t\tvar q = pattern[pattern.length.rand()] + [0, 0, 0, 12].randomSelect();\n\t\t\tvar freq = Math.pow(magicNumber, q) * 330;\n\t\t\tScore.add(new Note(0, genBass.curry(freq), 0, 0.1, 1.0));\n\t\t},\n\t\tmyon: function(c) {\n\t\t\tvar p = mouse.p;\n\t\t\tvar cord = Grid.toCordinate(p);\n\t\t\tvar pattern = this.code(cord);\n\t\t\t\n\t\t\tvar magicNumber = Math.pow(Math.E, Math.log(2) / 12);\n\t\t\tvar q = pattern[pattern.length.rand()];\n\t\t\tvar freq = Math.pow(magicNumber, q) * 220;\n\t\t\tScore.add(new Note(0, genSuperSin.curry(freq), 0, 0.08, 1));\n\t\t},\n\t};\n\n\tfunction genSquare(freq, volume) {\n\t\tvar seek = 0;\n\t\tvar pos = 0;\n\t\treturn function(buffer, sampleRate, size) {\n\t\t\tvar step = freq * Math.PI / sampleRate;\n\t\t\tfor(var i = 0; i < size; i++) {\n\t\t\t\tpos += step;\n\t\t\t\tvar e = Math.cos(seek / 4000 - 0.1);\n\t\t\t\tvar e = (4000 - seek) / 4000;\n\t\t\t\te *= e;\n\t\t\t\tbuffer[i] += (Math.sin(pos) < 0 ? -1 : 0) * (e < 0 ? 0 : e) * volume;\n\t\t\t\tseek++;\n\t\t\t}\n\t\t\treturn seek < 4000;\n\t\t};\n\t}\n\n\tfunction genBass(freq, volume) {\n\t\tvar seek = 0;\n\t\tvar pos = 0;\n\t\treturn function(buffer, sampleRate, size) {\n\t\t\tvar step = freq * Math.PI / sampleRate;\n\t\t\tfor(var i = 0; i < size; i++) {\n\t\t\t\tpos += step;\n\t\t\t\tvar e = (3000 - seek) / 4000;\n\t\t\t\tbuffer[i] += (Math.sin(pos) + Math.sin(pos * 1.001)) * (e < 0 ? 0 : e) * volume;\n\t\t\t\tseek++;\n\t\t\t}\n\t\t\treturn seek < 4000;\n\t\t};\n\t}\n\n\tfunction genSuperSin(freq, volume) {\n\t\tvar seek = 0;\n\t\tvar pos = 0;\n\t\treturn function(buffer, sampleRate, size) {\n\t\t\tvar step = freq * Math.PI / sampleRate;\n\t\t\tfor(var i = 0; i < size; i++) {\n\t\t\t\tpos += step;\n\t\t\t\tvar e = (40000 - seek) / 40000;\n\t\t\t\tvar sn = 0;\n\t\t\t\tfor(var j = 0; j < 8; j++) {\n\t\t\t\t\tsn += Math.sin(pos * j * 1.025);\n\t\t\t\t}\n\t\t\t\tbuffer[i] += sn * (e < 0 ? 0 : e) * volume;\n\t\t\t\tseek++;\n\t\t\t}\n\t\t\treturn seek < 40000;\n\t\t};\n\t}\n\n\tfunction genHat(freq, volume) {\n\t\tvar seek = 0;\n\t\tvar pos = 0;\n\t\treturn function(buffer, sampleRate, size) {\n\t\t\tvar step = freq * Math.PI / sampleRate;\n\t\t\tfor(var i = 0; i < size; i++) {\n\t\t\t\tpos += step;\n\t\t\t\tvar e = (4000 - seek) / 4000;\n\t\t\t\te *= e;\n\t\t\t\tbuffer[i] += Math.random() * (e < 0 ? 0 : e) * volume;\n\t\t\t\tseek++;\n\t\t\t}\n\t\t\treturn seek < 4000;\n\t\t};\n\t}\n\n\n\n\t(function() {\n\t\tvar c = 0;\n\t\tvar lbdown = false;\n\t\td.rgb(0x00, 0x00, 0x00).fillBack();\n\t\tvar main = function() {\n\t\t\tmouse.flush();\n\t\t\tlbdown = lbdown || mouse.lbdowned || mouse._count > 16;\n\t\t\t// Base\n\t\t\tif(c % 4 === 0) {\n\t\t\t\tComposer.synth(c);\n\t\t\t}\n\t\t\t// electric-piano(?)\n\t\t\tif(c % 4 === 0 && lbdown) {\n\t\t\t\tlbdown = false;\n\t\t\t\tComposer.elePi(c);\n\t\t\t}\n\t\t\t// Kick\n\t\t\tif([0, 16, 20].any(function(x) { return c % 32 === x; })) {\n\t\t\t\tScore.add(new Note(0, genBass.curry(110), 0, 0.2, 1));\n\t\t\t}\n\t\t\t// Hat\n\t\t\tif(c % 16 === 8) {\n\t\t\t\tScore.add(new Note(0, genHat.curry(0), 0, 0.16, 1));\n\t\t\t}\n\t\t\t// myo-n\n\t\t\tif(c % 64 === 0) {\n\t\t\t\tComposer.myon(c);\n\t\t\t}\n\n\t\t\td\n\t\t\t .blend(\"source-over\")\n\t\t\t .alpha(1.0)\n\t\t\t .rgb(0x00, 0x00, 0x00)\n\t\t\t .fillBack()\n\t\t\t;\n\t\t\tScore.act();\n\t\t\tScore.draw();\n\t\t\tEffectManager.act();\n\t\t\tEffectManager.draw();\n\n\t\t\tc++;\n\t\t};\n\n\t\twindow.setInterval(main, 33);\n\t})();\n\n});\n"},"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/6/x/E/6xEh_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/6/x/E/6xEh.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/6/x/E/6xEh_100.jpg"},"description_html":"<p>音を自分で書いてるので多分Chrome以外動きません</p>\n","parent":{"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/x/a/9/xa9f_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/x/a/9/xa9f.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/x/a/9/xa9f_100.jpg"},"modified_date":"2012-09-27 09:45:37","uid":"xa9f","created_date":"2012-09-26 17:21:03","path":"xa9f","description":"http://jsdo.it/event/q/2nd/vol3\r\n\r\nこのコードは、webクリエイターのためのコードコンテスト、Qのサンプルコードです。サイトからエントリーをし、こちらのコードをフォークしてください。\r\n\r\nお題：新しい楽器を作ってください\r\n---\r\n音楽の秋！ということで、HTML5、JavaScript、CSSを駆使してブラウザ上で動く楽器表現にチャレンジしてください。音の素材はお手本コードに含まれているので、音を自分なりに組み合わせ、同時に演出をつくってください。\r\n例えば、キーボードに反応して音が出るようなものや、絵を描いて音が出るようなもの、音の出る仕組みをアレンジしたものなど、音の素材は自分で用意してもよいので、自由な発想でチャレンジしてください。\r\n下記のお手本コードをFork（＝あなたなりのアレンジ）すると自動的にエントリーとなります。\r\n\r\n※コード内の音源は自由に使っていただいて構いません","statistic":{"forked":"59","favorite":"2","pageview":"31051"},"user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/6/7/b/5/67b56e45ea501eedd27eec70435d26553c0eace6_100.jpg","name":"jsdo.it_team"},"url":"http://jsdo.it/jsdo.it_team/xa9f","title":"Web Creator's Contest Q the 2nd【vol.3】エントリー用コード"},"modified_date":"2012-10-21 00:39:34","uid":"6xEh","created_date":"2012-10-21 00:21:46","path":"6xEh","description":"音を自分で書いてるので多分Chrome以外動きません","statistic":{"forked":"2","favorite":"0","pageview":"2211"},"url":"http://jsdo.it/crispy/6xEh","user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/b/4/2/c/b42cc3dd3312505b680411b3ead08e2dbc4192e4_100.jpg","name":"crispy"},"title":"automati"}