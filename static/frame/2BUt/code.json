{"source":{"css":"body { background-color: #ddddbb; margin: 0px; overflow: hidden; }\ntextarea { color: #333300; background-color: #ffffee; font-size: 12px;}","html":"<script type=\"text/javascript\">\nfunction run(type) {\n  var start = new Date();\n  \n  cls();\n  $('result').value = \"\";\n  p(\"start calculation\");\n  p(\" type = \" + type);\n  var primes = eval(\"Eratosthenes.\" + type + \"(10000)\");\n  $('result').value = primes.join(\" \");\n  p(\"complete... cost = \" + (new Date() - start) + \", \" + \"found \" + primes.length + \" prime number\");\n}\n\nfunction cls() {\n  $('status').value = \"\";\n}\n  \nfunction p(msg) {\n  $('status').value += msg + \"\\n\";\n}\n</script>\n\n<form style=\"margin-top: 20px\">\n  <textarea id=\"result\" rows=\"14\" style=\"width:100%;\" wrap=\"on\"></textarea>\n  <textarea id=\"status\" rows=\"5\" style=\"width:100%;\" wrap=\"on\"></textarea>\n  <button type=\"button\" onclick=\"run('general');\">general</button>\n  <button type=\"button\" onclick=\"run('regexp');\">regexp</button>\n  <button type=\"button\" onclick=\"run('canvas');\">Canvas</button>\n</form>\n\n<canvas id='prime' height=\"10px\"></canvas>\n<canvas id='work' height=\"1px\" width=\"10px\"></canvas>\n","lisence":"MIT","js":"(function() {\n\n  var Eratosthenes = {\n    // using array\n    // the most generaly used algorithm\n    general: function(max) {\n      var unprimables = [];\n      var result = [];\n      \n      for(var i = 2; i < max; i++) {\n        if(!unprimables[i]) {\n          result.push(i);\n          for(var j = i * i; j < max; j+= i) {\n            unprimables[j] = j;\n          }\n        }\n      }\n      return result;\n    },\n    // using RegExp#replace method for writing work memory\n    regexp: function(max) {\n      // allocate work area and fill with \"x\"\n      // note:\n      //   char \"x\" consists i am not prime number. and\n      //   char \"o\" consists i am     prime number.\n      var work = new Array(max + 1).join(\"o\");\n      \n      // substitute o -> x if number is not prime number\n      for(var i = 2; i <= Math.sqrt(max); i++) {\n        var pattern =\n           \"(^.\" + \"{\" + (i + 0) + \"})?\" +\n            \"(.\" + \"{\" + (i - 1) + \"})\" + \".\";\n        work = work.replace(new RegExp(pattern, 'g'), \"$1$2x\");\n      }\n      \n      // walk around and correct primes\n      var result = [];\n      for(var i = 2; i < max; i++) {\n        if(work.charAt(i - 1) === \"o\") result.push(i);\n      }\n      \n      return result;\n    },\n    // using canvas. using vram a.k.a GPGPU.\n    canvas: function(max) {\n      \n      // get canvas context\n      var primeCanvas = $(\"prime\");\n      primeCanvas.width = max;\n      var primeCtx = primeCanvas.getContext(\"2d\");\n      \n      var workCanvas = $(\"work\");\n      var workCtx = workCanvas.getContext(\"2d\");\n            \n      for(var i = 2; i < Math.sqrt(max); i++) {\n        \n        // set bit-blt interval\n        workCanvas.width = i;\n        \n        // fill background\n        workCtx.fillStyle = \"rgb(\" + [0xff, 0xff, 0xff].join(\", \") + \")\";\n        workCtx.fillRect(i - 1, 0, i - 1, 1);\n        \n        primeCtx.fillStyle = primeCtx.createPattern(workCanvas, \"repeat\");\n        primeCtx.fillRect(i, 0, max, 1);\n      }\n      \n      // get image data\n      var image = primeCtx.getImageData(0, 0, max, 1);\n      \n      // vram to array\n      var result = [];\n      for(var i = 2; i < max; i++) {\n        if(!image.data[(i - 1) << 2]) result.push(i);\n      }\n      \n      return result;\n    }\n  };\n  window.Eratosthenes = Eratosthenes;\n  \n})();"},"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/2/B/U/2BUt_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/2/B/U/2BUt.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/2/B/U/2BUt_100.jpg"},"description_html":"素数を10000まで探索するなどする。<br />\n*general: 配列を使用したエラトステネスの篩<br />\n*regexp: 正規表現を使用したエラトステネスの篩<br />\n*canvas: Canvasを使用したエラトステネスの篩","modified_date":"2010-12-19 00:32:51","uid":"2BUt","created_date":"2010-09-23 17:58:45","path":"2BUt","description":"素数を10000まで探索するなどする。\n*general: 配列を使用したエラトステネスの篩\n*regexp: 正規表現を使用したエラトステネスの篩\n*canvas: Canvasを使用したエラトステネスの篩","statistic":{"forked":"0","favorite":"0","pageview":"1107"},"user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/b/4/2/c/b42cc3dd3312505b680411b3ead08e2dbc4192e4_100.jpg","name":"crispy"},"url":"http://jsdo.it/crispy/2BUt","title":"Sieve of Eratosthenes (Web 2.0)"}