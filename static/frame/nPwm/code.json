{"source":{"css":"body { background-color: #000000; margin: 0px; overflow: hidden; }","html":"<canvas id='world'></canvas>","lisence":"MIT","js":"(function() {\n  var d = new DCore().init();\n\n  function Actors() {\n    this.acts = [];\n    this.pActs = [];\n  }\n  Actors.prototype = {\n    registor: function(fn) {\n      this.pActs.push(fn);\n    },\n    invoke: function() {\n      var p;\n      while(!!(p = this.pActs.pop())) this.acts.push(p);\n\n      this.acts = this.acts.map(function(e) {\n        return e.call() ? e : null;\n      }).compact();\n    }\n  };\n  var actors = new Actors();\n\n\n  // fragment\n  $R(1, 50).each(function() {\n    actors.registor(function() {\n      var y = $R(   0, 50.0).randf();\n      var x = $R(-1.5, 1.5).randf() * 3;\n      var z = $R(-1.5, 1.5).randf() * 3;\n      var r = $R(0.0, Math.PI * 2).randf();\n      var speed = $R(0.05, 0.03).randf();\n\n      var xw = 0.1;\n      var yw = $R(-0.1, 0.1).randf();\n      var zw = 0.1;\n\n      return function() {\n        try {\n          r += 0.05;\n          y -= speed;\n\n          d\n           .quads([\n             [-xw, -yw, -zw],\n             [+xw, -yw, -zw],\n             [+xw, +yw, +zw],\n             [-xw, +yw, +zw]\n           ].map(function(e) {\n             return e.rotatey(r);\n           }).translate([x, y, z])\n           .scale(scale)\n           )\n           .fill()\n          ;\n\n          if(y < -0.0) {\n            actors.registor(ripple(x, 0, z));\n            y = 50.0;\n          }\n\n        } catch(e) {\n        }\n        return true;\n      };\n    }());\n  });\n\n  // ripple\n  var ripple = function(_x, _y, _z) {\n    var x = _x;\n    var y = _y;\n    var z = _z;\n    var count = 0;\n    var rotates = $R(-0.15, 0.15).randf();\n\n    return function() {\n      var w = Math.sqrt(count * 0.01);\n      d\n       .alpha((20 - count) / 80)\n       .quads(\n         [[-w, 0,-w],\n          [ w, 0,-w],\n          [ w, 0, w],\n          [-w, 0, w]\n         ].map(function(e) {\n           return e.rotatey(count * rotates + x + y);\n         }).translate([x, y, z])\n       )\n       .stroke()\n      ;\n\n      count++;\n      return count < 20;\n    };\n  };\n\n\n\n  // ray\n  $R(1, 20).each(function() {\n    actors.registor(function() {\n      var y = $R(   0, 50.0).randf();\n      var x = $R(-1.5, 1.5).randf() * 10;\n      var z = $R(-1.5, 1.5).randf() * 10;\n      var r = $R(0.0, Math.PI * 2).randf();\n      var speed = $R(0.05, 0.2).randf();\n\n      var xw = 0.02;\n      var yw = 1.1;\n\n      return function() {\n        try {\n          y += speed;\n\n          d\n           .quads([\n             [-xw, -yw, z],\n             [+xw, -yw, z],\n             [+xw, +yw, z],\n             [-xw, +yw, z]\n           ].map(function(e) {\n             return e.rotatey(r);\n           }).translate([x, y, z])\n           .scale(scale)\n           )\n           .fill()\n          ;\n\n          if(y > 50.0) y -= 50;\n\n        } catch(e) {\n        }\n        return true;\n      };\n    }());\n  });\n\n  var scale;\n  var backHue = Math.random();\n  var second = false;\n  (function(c) {\n\n    // fill background\n    backHue += 0.0005;\n    backHue %= 1;\n    var s = 0.008;\n    var r = 15 * Math.cos(s * c * 0.10 + 1.0);\n\n    var cx = r * Math.sin(s * c + 0.5);\n    var cy = -r * Math.sin(s * c * 0.3) * 0.20 + r * 0.25;\n    cy *= r / r.abs();\n    var cz = r * Math.cos(s * c);\n\n\n    if(second) {\n      var hy = d.toWorld2d([\n        -cx * 10000, 0.0, -cz * 10000\n      ])[1];\n\n      // sky\n      if(hy > 0) {\n        d\n         .alpha(1.0)\n         .hsv(backHue, 0.9 + (cy < 0) ? 0.3 : 0 , 0.6)\n         .quads([\n           [0.0, 0.0],\n           [1.0, 0.0],\n           [1.0, hy],\n           [0.0, hy]\n         ]).fill()\n        ;\n      }\n      // water\n      if(hy < 1) {\n        d\n         .alpha(1.0)\n         .hsv(backHue, 0.4 + (cy < 0) ? 0.3 : 0, 0.7)\n         .quads([\n           [0.0, hy],\n           [1.0, hy],\n           [1.0, 1.0],\n           [0.0, 1.0]\n         ]).fill()\n        ;\n      }\n    }\n    second = true;\n\n    for(var i = 0; i < 2; i++) {\n      var first = !i;\n      scale = first ? [1,-1, 1] : [1, 1, 1];\n\n      // set camera\n      d.gazeFrom([cx, cy, cz],\n        [0.1, 2, 0.1],\n        [0, 1, 0]\n      );\n\n      d\n       .rgb(0xff, 0xff, 0xff)\n       .blend(\"source-over\")\n       .alpha(first ? 0.15 : 0.5)\n      ;\n      actors.invoke();\n    }\n\n    window.setTimeout(arguments.callee.curry(c + 1), 16);\n  })(0);\n})();\n\n"},"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/n/P/w/nPwm_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/n/P/w/nPwm.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/n/P/w/nPwm_100.jpg"},"description_html":"雨降りテスト<br />\n※Chrome推奨","modified_date":"2010-11-20 17:41:48","uid":"nPwm","created_date":"2010-11-14 18:27:30","path":"nPwm","description":"雨降りテスト\n※Chrome推奨","statistic":{"forked":"0","favorite":"1","pageview":"1341"},"user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/b/4/2/c/b42cc3dd3312505b680411b3ead08e2dbc4192e4_100.jpg","name":"crispy"},"url":"http://jsdo.it/crispy/nPwm","title":"square rain"}