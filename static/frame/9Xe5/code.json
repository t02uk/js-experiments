{"source":{"css":"    * {\n        margin: 0px;\n        padding: 0px;\n    }\n    canvas {\n        position: absolute;\n        left: 0px;\n        top: 0px;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n    }\n","html":"<canvas id=\"world\" width=\"456\" height=\"456\"></canvas>","lisence":"MIT","js":"window.onload = (function() {\n\n  var d = new DCore();\n\n  // random generator\n  var randomGen = function() {\n    var x = 1;\n    return function() {\n      x = (x * 22695477 + 1) & 0xffffffff;\n      return ((x >> 16) & 0x7fff) / 0x7fff;\n    };\n  };\n  \n  // make setTimeout time sensitive\n  (function() {\n    var lastTime = 0;\n    var org_setTimeout = window.setTimeout;\n    window.setTimeout = function(func, wait) {\n      var realWait = !lastTime ? wait : (wait - (new Date() - lastTime));\n      if(realWait >= wait) realWait = wait;\n      if(realWait <= 0) realWait = 1;\n      lastTime = +new Date();\n      org_setTimeout(func, wait);\n    }\n  })();\n\n  // create moon texture\n  moonTexture = (function() {\n    var sd = d.subTexture();\n\n    // fill back\n    sd\n     .rgb(0x00, 0x00, 0x00)\n     .fillBack()\n    ;\n\n    // body\n    sd\n     .luminous([0.5, 0.5], 0.30, 0.90, [\n         [0.00,  [0xff, 0xff, 0xaa]],\n         [1.00,  [0xaa, 0xaa, 0x88]],\n     ])\n     .fill()\n    ;\n\n    // elipse\n    sd\n     .rgb(0x00, 0x00, 0x00)\n     .circle([0.4, 0.4], 0.8)\n     .fill()\n    ;\n\n    return sd;\n  })();\n  \n  // create mountain texture\n  var createMountainTexture = function() {\n    var mountain = $R(0, 127).map(function(e) {\n      return [e / 127, 0.9];\n    });\n    \n    (function() {\n      var smoothNoise = function(x) {\n        return Math.random() * x / 2\n             + Math.random() * (x - 1) / 4\n             + Math.random() * (x + 1) / 4\n        ;\n      };\n\n      var interpolate = function(a, b, x) {\n        var ft = x * Math.PI;\n        var f =  (1 - Math.cos(ft)) * 0.5;\n\n        return a * (1 - f) + b * f;\n      }\n\n      var interpolatedNoise = function(x) {\n        var ix = ~~x;\n        var fx = (x - ix);\n\n        var v1 = smoothNoise(ix);\n        var v2 = smoothNoise(ix + 1);\n\n        return interpolate(v1, v2, fx);\n      }\n\n      var pelinNoise = function(x) {\n        var total = 0;\n        var p = 1.8;\n        var n = 1;\n\n        for(var i = 0; i < n; i++) {\n          var freq = Math.pow(2.0, i);\n          var amplitude = Math.pow(p, i);\n\n          total += interpolatedNoise(x * freq) * amplitude * 0.06;\n        }\n\n        return total;\n      }\n      // export pelin noise\n      window.pelinNoise = pelinNoise;\n    })();\n\n    for(var i = 0; i < 64; i++) {\n      var z = pelinNoise(6);\n      mountain[i +  0][1] -= z;\n      mountain[i + 64][1] -= z;\n    }\n    mountain[  0][1] = \n    mountain[ 63][1] = \n    mountain[ 64][1] = \n    mountain[127][1] = 0.9;\n    mountain.push([1, 1]);\n    mountain.push([0, 1]);\n\n    var sd = d.subTexture(1024, 256);\n    sd\n      .rgb([0x11, 0x22, 0x66])\n      .quads(mountain)\n      .fill()\n    ;\n\n    // particle :(\n    //for(var i = 0; i < 10; i++) {\n    //  var k = (64).rand();\n    //  var x = mountain[k][0];\n    //  var y = $R(mountain[k][1], 0.98).randf();\n\n    //  sd\n    //    .blend(\"lighter\")\n    //    .alpha(0.1)\n    //    .luminous([x, y], 0.003, 0.005, [\n    //        [0.00,  [0xff, 0xff, 0xff]],\n    //        [0.50,  [0x00, 0xff, 0xff]],\n    //        [1.00,  [0x00, 0x00, 0x00]],\n    //    ]).fill()\n    //  ;\n    //}\n\n\n    return sd;\n  };\n\n  var mountainTexture = createMountainTexture();\n\n  // draw glass\n  var drawGlass = function(bx, bz, bs, length, dt) {\n\n    var glass = [];\n    var slope = Math.sin(bs * 0.04) * 0.4 + 0.2;\n    var x = 0;\n    var y = 0;\n\n    if(dt > 1) dt = 1;\n    if(dt < 0) return;\n\n    glass.push([x + bx, y, bz]);\n    for(var i = 0; i < 7; i++) {\n      x += length * Math.sin(slope);\n      y += length * Math.cos(slope);\n      slope *= 1.20;\n      length *= 0.7;\n      glass.push([x + bx, y, bz]);\n    }\n\n    d\n     .alpha(0.3)\n     .blend(\"lighter\")\n     .luminous([x + bx, y, bz], 0.02, 0.04, [\n         [0.00, [0xcc, 0xcc, 0xcc]],\n         [0.10, [0x33, 0x99, 0x99]],\n         [0.20, [0x33, 0x33, 0x66]],\n         [1.00, [0x00, 0x00, 0x00]],\n     ])\n     .fill()\n    ;\n\n    if(d.backclip) return;\n\n    d\n     .rgb(0xcc, 0xcc, 0xff)\n     .line(glass)\n     .alpha(0.3 * dt)\n     .lineWidth(0.002)\n     .stroke()\n    ;\n\n\n    d\n     .alpha(0.1)\n     .blend(\"lighter\")\n     .luminous([x + bx, -y, bz], 0.02, 0.04, [\n         [0.00, [0xcc, 0xcc, 0xcc]],\n         [0.10, [0x33, 0x99, 0x99]],\n         [0.20, [0x33, 0x33, 0x66]],\n         [1.00, [0x00, 0x00, 0x00]],\n     ])\n     .fill()\n    ;\n\n    if(d.backclip) return;\n\n    d\n     .rgb(0xcc, 0xcc, 0xff)\n     .alpha(0.1 * dt)\n     .line(glass.scale([1, -1, 1]))\n     .lineWidth(0.002)\n     .stroke()\n    ;\n  };\n\n  // particle\n  var drawParticle = function(bx, by, bz, ln) {\n    if(ln < 0) return;\n\n    d\n     .alpha(ln)\n     .blend(\"lighter\")\n     .luminous([bx, by, bz], 0.03, 0.09, [\n         [0.00, [0xcc, 0xcc, 0xcc]],\n         [0.10, [0x33, 0x99, 0x99]],\n         [0.20, [0x33, 0x33, 0x66]],\n         [1.00, [0x00, 0x00, 0x00]],\n     ])\n     .fill()\n    ;\n\n    d\n     .alpha(ln * 0.2)\n     .blend(\"lighter\")\n     .luminous([bx, -by, bz], 0.03, 0.04, [\n         [0.00, [0xcc, 0xcc, 0xcc]],\n         [0.10, [0x33, 0x99, 0x99]],\n         [0.20, [0x33, 0x33, 0x66]],\n         [1.00, [0x00, 0x00, 0x00]],\n     ])\n     .fill()\n    ;\n  };\n\n  (function(c) {\n\n    var crad = c * 0.02;\n    var gp = [1.0, Math.cos(c * 0.013) + 1.5, 0];\n    var cp = [Math.cos(c * 0.007) * 3, 2.0 + Math.sin(c * 0.01) * 1.5, 0].rotatey(c * 0.01);\n\n    d\n     .gazeFrom(\n       cp,\n       gp\n     )\n    ;\n\n\n    var hy = d.toWorld2d(cp.sub(gp).scale([-10000, 0, -10000]))[1];\n\n    // sky\n    if(hy > 0) {\n      d\n       .blend(\"source-over\")\n       .alpha(1.0)\n       .rgb([0x00, 0x33, 0x77])\n       .quads([\n           [0.0, 0.0],\n           [1.0, 0.0],\n           [1.0, hy],\n           [0.0, hy]\n       ])\n       .fill()\n      ;\n\n      // mountain\n      var normalize = function(radian) {\n        return Math.atan2(Math.sin(radian), Math.cos(radian));\n      };\n\n      var dp = gp.sub(cp);\n      var grad = Math.atan2(dp[0], dp[2]) + Math.PI;\n      var w = 0.25;\n      var x = grad / (Math.PI * 2) / 2 + 0.25;\n\n      d\n       .blend(\"source-over\")\n       .alpha(0.2)\n       .drawImage(\n          mountainTexture,\n          [x,  0], [w, 1],\n          [0,  hy - 0.3], [1, 0.3]\n       )\n      ;\n    }\n    // in water\n    if(hy < 1) {\n      d\n       .blend(\"source-over\")\n       .alpha(1)\n       .rgb([0x00, 0x44, 0x88])\n       .quads([\n           [0.0, hy],\n           [1.0, hy],\n           [1.0, 1.0],\n           [0.0, 1.0]\n       ])\n       .fill()\n      ;\n\n      // mountain\n      var normalize = function(radian) {\n        return Math.atan2(Math.sin(radian), Math.cos(radian));\n      };\n\n      var dp = gp.sub(cp);\n      var grad = Math.atan2(dp[0], dp[2]) + Math.PI;\n      var w = 0.25;\n      var x = grad / (Math.PI * 2) / 2 + 0.25;\n\n      d\n       .save()\n       .translate([0, 1])\n       .scale([1, -1])\n       .blend(\"source-over\")\n       .alpha(0.15)\n       .drawImage(\n          mountainTexture,\n          [x,  0], [w, 1],\n          [0,  1 - hy - 0.3], [1, 0.3]\n       )\n       .restore()\n      ;\n    }\n\n    // moon\n    var rect = Geo.rect(true).map(function(e) {\n      return [0, -e[0], -e[1]];\n    });\n\n\n   // skys\n   var to = rect\n       .scale([2000, 2000, 2000])\n       .translate([10000, 0, 0])\n       .invoke(\"rotatez\", 0.4)\n   ;\n\n   d\n    .rgb(0x00, 0xff, 0x00)\n    .transformTo(Geo.rect(), to, function(d) {\n        d\n         .blend(\"lighter\")\n         .alpha(0.7)\n         .drawImage(moonTexture)\n        ;\n    })\n   ;\n\n    // refrection\n    var to = to.scale([1, -1, 1]);\n    d\n     .rgb(0x00, 0xff, 0x00)\n     .transformTo(Geo.rect(), to, function(d) {\n         d\n          .blend(\"lighter\")\n          .alpha(0.1)\n          .drawImage(moonTexture)\n         ;\n     })\n    ;\n\n    d\n     .blend(\"lighter\")\n     .alpha(1)\n    ;\n      \n    var random = randomGen();\n\n    // glasses\n    for(var i = 0; i < 150; i++) {\n      var bx = (random() - 0.5) * 20;\n      var bz = (random() - 0.5) * 20;\n      var dt = cp.distance([bx, 0, bz]);\n      drawGlass(bx, bz, c * 0.8 + (bx * 8.5), random() * 0.4 + 0.10, 8 / dt);\n    }\n\n    // particle: josho\n    for(var i = 0; i < 50; i++) {\n      var bx = (random() - 0.5) * 8 + Math.sin(random() * c * 0.04);\n      var by = (random() - 0.0) * 0.3 + 1 + Math.sin(c * 0.04 + random()) * random() + (c * 0.02 + random() * 20) % 20;\n      var bz = (random() - 0.5) * 8 + Math.sin(random() * c * 0.04);\n      drawParticle(bx, by, bz, Math.sin(c * (random() * 0.1) + random()) * (random() * 0.1 + 0.1) + 0.2);\n    }\n\n    // particle: fuwafuwa\n    for(var i = 0; i < 30; i++) {\n      var bx = (random() - 0.5) * 8 + Math.sin(random() * c * 0.04);\n      var by = (random() - 0.0) * 0.3 + 1 + Math.sin(c * 0.04 + random()) * random();\n      var bz = (random() - 0.5) * 8 + Math.sin(random() * c * 0.04);\n      drawParticle(bx, by, bz, Math.sin(c * (random() * 0.1) + random()) * (random() * 0.1 + 0.1) + 0.2);\n    }\n    setTimeout(arguments.callee.curry(c + 1), 33);\n  })(0);\n\n});\n// vim:sw=2:ts=2\n\n"},"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/9/X/e/9Xe5_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/9/X/e/9Xe5.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/9/X/e/9Xe5_100.jpg"},"description_html":"参考文献：<br />\r\n<a  href=\"http://ja.wikipedia.org/wiki/%E3%83%A8%E3%82%B3%E3%83%8F%E3%83%9E%E8%B2%B7%E3%81%84%E5%87%BA%E3%81%97%E7%B4%80%E8%A1%8C\">http://ja.wikipedia.org/wiki/%E3%83%A8%E3%82%B3%E3%83%8F%E3%83%9E%E8%B2%B7%E3%81%84%E5%87%BA%E3%81%97%E7%B4%80%E8%A1%8C</a><br />\r\n<br />\r\n重いのでChrome推奨","parent":{"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/f/r/f/frf8_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/f/r/f/frf8.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/f/r/f/frf8_100.jpg"},"modified_date":"2012-07-26 15:01:48","uid":"frf8","created_date":"2012-07-24 12:51:06","path":"frf8","description":"Web Creator's Contest Q the 2nd【vol.1】のエントリー用コードです。このコードをフォークするとコンテストに参加できます。\r\nhttp://jsdo.it/event/q/2nd/vol1\r\n\r\nーーーーー\r\n「夏を涼しくする表現にチャレンジしてください」\r\n気づけば今年も暑い夏の季節がやってきました。HTML5、JavaScript、CSSを駆使して、暑い夏をひんやり涼しくするような演出をつくってください。\r\n本コードのような水が流れる作品や、風を感じる作品、花火などなど、どんな表現でも構いません。あなたの得意分野でチャレンジしてみてください！自由な発想をお待ちしています！","statistic":{"forked":"69","favorite":"3","pageview":"39574"},"user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/6/7/b/5/67b56e45ea501eedd27eec70435d26553c0eace6_100.jpg","name":"jsdo.it_team"},"url":"http://jsdo.it/jsdo.it_team/frf8","title":"Web Creator's Contest Q the 2nd【vol.1】エントリー用コード"},"modified_date":"2012-08-08 20:48:49","uid":"9Xe5","created_date":"2012-07-29 20:07:09","path":"9Xe5","description":"参考文献：\r\nhttp://ja.wikipedia.org/wiki/%E3%83%A8%E3%82%B3%E3%83%8F%E3%83%9E%E8%B2%B7%E3%81%84%E5%87%BA%E3%81%97%E7%B4%80%E8%A1%8C\r\n\r\n重いのでChrome推奨","statistic":{"forked":"1","favorite":"6","pageview":"3710"},"url":"http://jsdo.it/crispy/9Xe5","user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/b/4/2/c/b42cc3dd3312505b680411b3ead08e2dbc4192e4_100.jpg","name":"crispy"},"title":"街灯の群れ"}