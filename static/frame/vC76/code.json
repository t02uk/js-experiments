{"source":{"css":"body { background-color: #000; margin: 0px; overflow: hidden; width: 465px; height: 465px; }\r\n","html":"<canvas id=\"world\"></canvas>\r\n","lisence":"MIT","js":"(function() {\r\n\tvar d = new DCore();\r\n\r\n\tvar Box = {};\r\n\tBox.size = 20;\r\n\tBox.min = [-Box.size,-Box.size,-Box.size];\r\n\tBox.max = [ Box.size, Box.size, Box.size];\r\n\tBox.draw = function() {\r\n\t\td\r\n\t\t .rgb(0xff, 0xff, 0xff)\r\n\t\t;\r\n\r\n\t\td\r\n\t\t .line([[Box.min[0], Box.min[1], Box.min[2]], [Box.max[0], Box.min[1], Box.min[2]]])\r\n\t\t .stroke()\r\n\t\t .line([[Box.max[0], Box.min[1], Box.min[2]], [Box.max[0], Box.max[1], Box.min[2]]])\r\n\t\t .stroke()\r\n\t\t .line([[Box.max[0], Box.max[1], Box.min[2]], [Box.min[0], Box.max[1], Box.min[2]]])\r\n\t\t .stroke()\r\n\t\t .line([[Box.min[0], Box.max[1], Box.min[2]], [Box.min[0], Box.min[1], Box.min[2]]])\r\n\t\t .stroke()\r\n\r\n\t\t .line([[Box.min[0], Box.min[1], Box.max[2]], [Box.max[0], Box.min[1], Box.max[2]]])\r\n\t\t .stroke()\r\n\t\t .line([[Box.max[0], Box.min[1], Box.max[2]], [Box.max[0], Box.max[1], Box.max[2]]])\r\n\t\t .stroke()\r\n\t\t .line([[Box.max[0], Box.max[1], Box.max[2]], [Box.min[0], Box.max[1], Box.max[2]]])\r\n\t\t .stroke()\r\n\t\t .line([[Box.min[0], Box.max[1], Box.max[2]], [Box.min[0], Box.min[1], Box.max[2]]])\r\n\t\t .stroke()\r\n\r\n\t\t .line([[Box.min[0], Box.min[1], Box.min[2]], [Box.min[0], Box.min[1], Box.max[2]]])\r\n\t\t .stroke()\r\n\t\t .line([[Box.max[0], Box.min[1], Box.min[2]], [Box.max[0], Box.min[1], Box.max[2]]])\r\n\t\t .stroke()\r\n\t\t .line([[Box.max[0], Box.max[1], Box.min[2]], [Box.max[0], Box.max[1], Box.max[2]]])\r\n\t\t .stroke()\r\n\t\t .line([[Box.min[0], Box.max[1], Box.min[2]], [Box.min[0], Box.max[1], Box.max[2]]])\r\n\t\t .stroke()\r\n\t\t;\r\n\t};\r\n\r\n\tfunction Node(sid) {\r\n\t\tthis.sid = sid;\r\n\t\tvar w = 10;\r\n\t\tthis.p = [$R(-w, w).randf(), $R(-w, w).randf(), $R(-w, w).randf()];\r\n\t\tvar s = 0.2;\r\n\t\tthis.sp = [$R(-s, s).randf(), $R(-s, s).randf(), $R(-s, s).randf()];\r\n\t\tthis.s = 0.01;\r\n\t\tthis.visibleDistance = 7;\r\n\t\tthis.minDistance = 0.1;\r\n\t};\r\n\tNode.prototype.act = function(sid) {\r\n\r\n\t\tthis.p = this.p.translate(this.sp);\r\n\t\tif(this.p[0] < Box.min[0]) {\r\n\t\t\tthis.p[0] = Box.max[0];\r\n\t\t}\r\n\t\tif(this.p[0] > Box.max[0]) {\r\n\t\t\tthis.p[0] = Box.min[0];\r\n\t\t}\r\n\r\n\t\tif(this.p[1] < Box.min[1]) {\r\n\t\t\tthis.p[1] = Box.max[1];\r\n\t\t}\r\n\t\tif(this.p[1] > Box.max[1]) {\r\n\t\t\tthis.p[1] = Box.min[1];\r\n\t\t}\r\n\r\n\t\tif(this.p[2] < Box.min[2]) {\r\n\t\t\tthis.p[2] = Box.max[2];\r\n\t\t}\r\n\t\tif(this.p[2] > Box.max[2]) {\r\n\t\t\tthis.p[2] = Box.min[2];\r\n\t\t}\r\n\t};\r\n\tNode.prototype.spring = function() {\r\n\t\tvar nodes = God.nodes;\r\n\t\tvar self = this;\r\n\r\n\t\tnodes.each(function(that) {\r\n\t\t\tif(self.sid < that.sid) {\r\n\t\t\t\tvar visibleDistance = self.visibleDistance;\r\n\t\t\t\tvar minDistance = self.minDistance;\r\n\t\t\t\tvar distance = self.p.distance(that.p);\r\n\t\t\t\tif(distance < visibleDistance) {\r\n\t\t\t\t\tvar diff = that.p.sub(self.p);\r\n\t\t\t\t\tself.sp = self.sp.add(diff.mul(0.0025));\r\n\t\t\t\t\tself.sp = self.sp.mul(0.996);\r\n\r\n\t\t\t\t\tvar c = distance / visibleDistance * 64;\r\n\t\t\t\t\td\r\n\t\t\t\t\t .rgb(c, c, c)\r\n\t\t\t\t\t .line([self.p, that.p])\r\n\t\t\t\t\t .stroke()\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\tif(distance < minDistance) {\r\n\t\t\t\t\tself.sp = self.sp.mul(2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tNode.prototype.draw = function() {\r\n\t\td\r\n\t\t .luminous(this.p, 0.02, 0.1, [\r\n\t\t    [0.00,   [0xff, 0xff, 0xff]],\r\n\t\t    [1.00,   [0xff, 0xff, 0xff]],\r\n\t\t ])\r\n\t\t .fill()\r\n\t\t;\r\n\t};\r\n\r\n\tvar God  = {\r\n\t\tinitialize: function() {\r\n\t\t\tthis.nodes = $R(0, 48).map(function(i) { return new Node(i);});\r\n\t\t},\r\n\t\tact: function() {\r\n\t\t\tthis.nodes.each(function(e) {\r\n\t\t\t\te.act();\r\n\t\t\t});\r\n\t\t\tthis.nodes.each(function(e) {\r\n\t\t\t\te.spring();\r\n\t\t\t});\r\n\t\t},\r\n\t\tdraw: function() {\r\n\t\t\tthis.nodes.each(function(e) {\r\n\t\t\t\ttry {\r\n\t\t\t\te.draw();\r\n\t\t\t\t} catch(e) {}\r\n\t\t\t});\r\n\r\n\t\t\tBox.draw();\r\n\t\t},\r\n\t};\r\n\r\n\tvar Camera = {\r\n\t\tinitialize: function() {\r\n\t\t\tvar self = this;\r\n\t\t\tthis.cnt = 0;\r\n\t\t\tthis.cameraWorks = [\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tself.pos = [70, 0, 0].rotatey(self.cnt * 0.01);\r\n\t\t\t\t\t\tself.to = [0, 0, 0];\r\n\t\t\t\t\t\tself.upTo = [0, 1, 0];\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tvar w = Box.size * 1.5;\r\n\t\t\t\t\t\tself.pos = [Math.cos(self.cnt * 0.008 + 0.01) * w, Math.sin(self.cnt * 0.01) * w, 0].rotatey(self.cnt * 0.007);\r\n\t\t\t\t\t\tself.to = [0, Math.cos(self.cnt * 0.01), 0];\r\n\t\t\t\t\t\tself.upTo = [0, 1, 0].rotatex(self.cnt * 0.005);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tvar fromN = God.nodes.length.rand();\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar toN = God.nodes.length.rand();\r\n\t\t\t\t\t} while(!(fromN !=toN))\r\n\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tself.pos = God.nodes[fromN].p;\r\n\t\t\t\t\t\tself.to = God.nodes[toN].p;\r\n\t\t\t\t\t\tself.upTo = [0, 1, 0];\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tvar w = Box.size * 0.8;\r\n\t\t\t\t\tself.pos = [$R(-w, w).randf(), $R(-w, w).randf(), $R(-w, w).randf()];\r\n\t\t\t\t\tvar toN = God.nodes.length.rand();\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tself.to = God.nodes[toN].p;\r\n\t\t\t\t\t\tself.upTo = [0, 1, 0];\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\t},\r\n\t\tact: function() {\r\n\t\t\tvar self = this;\r\n\t\t\tif((self.cnt % 256) === 0) {\r\n\t\t\t\tself.cameraWork = self.cameraWorks.randomSelect()();\r\n\t\t\t}\r\n\t\t\tself.cnt++;\r\n\t\t\tself.cameraWork();\r\n\r\n\t\t\td\r\n\t\t\t .gazeFrom(\r\n\t\t\t\tself.pos,\r\n\t\t\t\tself.to,\r\n\t\t\t\tself.upTo\r\n\t\t\t );\r\n\t\t},\r\n\t}\r\n\r\n\tGod.initialize();\r\n\tCamera.initialize();\r\n\t(function(c) {\r\n\t\td\r\n\t\t .blend(\"source-over\")\r\n\t\t .alpha(1)\r\n\t\t .rgb(0x00, 0x00, 0x00)\r\n\t\t .fillBack()\r\n\t\t;\r\n\r\n\t\tCamera.act();\r\n\r\n\t\tGod.act();\r\n\t\tGod.draw();\r\n\t\t\r\n\t\twindow.setTimeout(arguments.callee.curry(c + 1), 33);\r\n\t})(0);\r\n})();\r\n"},"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/v/C/7/vC76_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/v/C/7/vC76.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/v/C/7/vC76_100.jpg"},"description_html":"inspired <a  href=\"http://jsdo.it/Evan/apyQ\">http://jsdo.it/Evan/apyQ</a>","modified_date":"2013-06-22 12:00:15","uid":"vC76","created_date":"2013-06-16 21:48:48","path":"vC76","description":"inspired http://jsdo.it/Evan/apyQ","statistic":{"forked":"0","favorite":"0","pageview":"1115"},"user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/b/4/2/c/b42cc3dd3312505b680411b3ead08e2dbc4192e4_100.jpg","name":"crispy"},"url":"http://jsdo.it/crispy/vC76","title":"Node Garden in the Cube"}