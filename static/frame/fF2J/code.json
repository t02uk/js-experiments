{"source":{"css":"* {\n  margin: 0px;\n  padding: 0px;\n}\nbody {\n  background: #fff;\n}\n\ncanvas {\n  position: absolute;\n  left: 0px;\n  top: 0px;\n  width: 100%;\n  height: 100%;\n  /*overflow: hidden;*/\n}\n","html":"<canvas id='world'></canvas>","lisence":"MIT","js":"window.onload = function() {\n\t// Create draw object\n\tvar d = new DCore();\n\n\t// Box (fall object)\n\tfunction Box() {\n\t\tBox.prototype.initialize.apply(this, $A(arguments));\n\t};\n\tBox.prototype = {\n\t\tinitialize: function(i) {\n\t\t\tthis.p = [$R(0, 1).randf(), $R(0, 0.7).randf()];\n\t\t\tthis.s = [$R(-0.01, 0.01).randf(), $R(-0.01, 0.01).randf()];\n\t\t\tthis.bound = false;\n\t\t\tthis.binder = undefined;\n\t\t\tthis.rotates = $R(-.1, .1).randf();\n\t\t\tthis.rotatep = $R(0, 100).randf();\n\t\t\tthis.h = i / 7;\n\t\t},\n\t\tact: function() {\n\t\t\t// on bound\n\t\t\tif(this.bound) {\n\t\t\t\tthis.binder.act();\n\n\t\t\t\t// if box is enough fast, release object randomly\n\t\t\t\tif(this.s[1] < 0) {\n\t\t\t\t\tif($R(0, 1).randf() < 0.08) {\n\t\t\t\t\t\tthis.binder.release();\n\t\t\t\t\t\tthis.bound = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.p = this.p.add(this.s);\n\t\t\t\tthis.s = this.s.mul(0.95);\n\t\t\t\tthis.s = this.s.add([0, 0.002]);\n\t\t\t\tthis.rotates *= 1.003;\n\t\t\t}\n\t\t\t// too slow\n\t\t\tif(!this.bound && Camera.py - this.p[1] > 1) {\n\t\t\t\t// follow automatically\n\t\t\t\tthis.p[1] = Camera.py - 1.0;\n\t\t\t}\n\t\t\tif(this.p[0] > 1) {\n\t\t\t\tif(this.bound) {\n\t\t\t\t\t//this.binder.rads *= -1.0;\n\t\t\t\t} else {\n\t\t\t\t\tthis.s[0] *= -0.9\n\t\t\t\t\tthis.p[0] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.p[0] < 0) {\n\t\t\t\tif(this.bound) {\n\t\t\t\t\t//this.binder.rads *= -1.0;\n\t\t\t\t} else {\n\t\t\t\t\tthis.s[0] *= -0.9\n\t\t\t\t\tthis.p[0] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!this.bound) {\n\t\t\t\t// if not bound, bind randomly\n\t\t\t\tif($R(0, 1).randf() < 0.05) {\n\t\t\t\t\tthis.binder = new Binder(this);\n\t\t\t\t\tthis.bound = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// register particle\n\t\t\tif(this.s.abs() > 0.01) {\n\t\t\t\tvar particle = new Particle(this.p, [0, 0.02 + this.s.abs() / 10].rotate($R(0, 100).randf()), this.h);\n\t\t\t\tparticles.push(particle);\n\t\t\t}\n\n\t\t\tthis.rotatep += this.rotates;\n\t\t},\n\t\tdraw: function() {\n\t\t\t// form\n\t\t\tvar form = $R(0, 2).map(function(i) {\n\t\t\t\treturn [0.018, 0].rotate(i.toRadian() / 3);\n\t\t\t}).rotate(this.rotatep).translate(this.p);\n\n\t\t\t// draw\n\t\t\td\n\t\t\t .quads(form)\n\t\t\t .hsv(this.h, 0.3, 0.8)\n\t\t\t .fill()\n\t\t\t .hsv(this.h, 0.2, 0.95)\n\t\t\t .stroke()\n\t\t\t;\n\n\t\t\t// draw line from binder to this\n\t\t\tif(this.bound) {\n\t\t\t\td\n\t\t\t\t .rgb(0xdd, 0xdd, 0xdd)\n\t\t\t\t .line([this.p, this.binder.p])\n\t\t\t\t .stroke()\n\t\t\t\t;\n\t\t\t\tthis.binder.draw();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Binder (maru)\n\tfunction Binder(bindee) {\n\t\tthis.bindee = bindee;\n\t\tvar bp = bindee.p;\n\t\tvar bs = bindee.s;\n\t\tvar l = 10;\n\t\tvar sign = [-1, 1][$R(0, 1).rand()];\n\t\tif(bp[0] > 0.5) {\n\t\t\tsign = 1;\n\t\t} else if(bp[0] < 0.5) {\n\t\t\tsign = -1;\n\t\t}\n\t\tthis.sign = sign;\n\t\tthis.p = bp.add([-sign * bs[1] * l, sign * bs[0] * l]);\n\t\tthis.pl = bp.distance(this.p);\n\t\tthis.sl = bs.abs();\n\t\tvar np = bp.sub(this.p);\n\t\tthis.radp = Math.atan2(np[1], np[0]);\n\t\tthis.rads = sign * (this.sl / this.pl);\n\t};\n\n\tBinder.prototype = {\n\t\tact: function() {\n\t\t\tvar t = this.bindee;\n\t\t\tthis.radp += this.rads;\n\t\t\tvar op = t.p.clone();\n\t\t\tt.p = this.p.add([this.pl, 0].rotate(this.radp));\n\t\t\tt.s = t.p.sub(op);\n\t\t\tif(Math.cos(this.radp) > 0) {\n\t\t\t\tthis.rads += 0.003;\n\t\t\t} else {\n\t\t\t\tthis.rads -= 0.003;\n\t\t\t}\n\n\t\t\tt.rotates = this.rads;\n\t\t},\n\t\trelease: function() {\n\t\t\tvar t = this.bindee;\n\t\t\tt.rotates *= $R(0.9, 4.0).randf();\n\t\t},\n\t\tdraw: function() {\n\t\t\td\n\t\t\t .rgb(0x99, 0x99, 0x99)\n\t\t\t .circle(this.p, 0.01)\n\t\t\t .stroke()\n\t\t\t;\n\t\t}\n\t};\n\n\tCamera = {\n\t\tfollow: function(y) {\n\t\t\tvar self = Camera;\n\t\t\tvar bottom = self.py + self.height;\n\t\t\tvar dy = y - bottom;\n\t\t\tif(dy > 0) {\n\t\t\t\tself.py += dy * 0.2;\n\t\t\t}\n\t\t},\n\t\tpy: 0.0,\n\t\theight: 0.7,\n\t}\n\n\tfunction Particle(p, s, h) {\n\t\tthis.p = p;\n\t\tthis.s = s;\n\t\tthis.rotatep = $R(0, 100).randf();\n\t\tthis.rotates = $R(-0.5, 0.5).randf();\n\t\tthis.h = h;\n\t}\n\tParticle.prototype = {\n\t\tact: function() {\n\t\t\tthis.p = this.p.add(this.s);\n\t\t\tthis.s = this.s.mul(0.90);\n\t\t\tthis.rotatep += this.rotates;\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar form = $R(0, 2).map(function(i) {\n\t\t\t\treturn [0.01, 0].rotate(i.toRadian() / 3);\n\t\t\t}).rotate(this.rotatep).translate(this.p);\n\n\t\t\tvar s = this.s.abs() * 20;\n\n\t\t\td\n\t\t\t .quads(form)\n\t\t\t .blend(\"source-over\")\n\t\t\t .alpha(s)\n\t\t\t .hsv(this.h, 0.75, 0.7)\n\t\t\t .fill()\n\t\t\t .alpha(1.0)\n\t\t\t;\n\t\t}\n\t};\n\n\n\tvar boxes = $R(0, 6).map(function(i) { return new Box(i);});\n\tvar particles = [];\n\tvar sd = d.subTexture();\n\n\n\t(function() {\n\n\t\tboxes.each(function(e) {\n\t\t\te.act();\n\t\t});\n\n\t\tparticles = particles.select(function(e) {\n\t\t\treturn e.s.abs() > 0.001;\n\t\t});\n\t\tparticles.each(function(e) {\n\t\t\te.act();\n\t\t});\n\n\t\tvar bottomBallY = boxes.max(function(e) {\n\t\t\treturn e.p[1];\n\t\t});\n\t\tCamera.follow(bottomBallY);\n\n\t\t// initialize background\n\t\td\n\t\t .blend(\"source-over\")\n\t\t .rgb(0xff, 0xff, 0xff)\n\t\t .fillBack()\n\t\t .blend(\"source-over\")\n\t\t .alpha(1)\n\t\t;\n\n\t\td.save();\n\t\td.translate([0, -Camera.py]);\n\n\n\t\t// fill back bubble\n\n\t\tvar random = function() {\n\t\t  var x = 1;\n\t\t  return function() {\n\t\t\tx = (x * 22695477 + 1) & 0xffffff;\n\t\t\treturn (x >> 16) & 0x7fff;\n\t\t  };\n\t\t}();\n\t\t$R(0, 11).each(function(i) {\n\t\t\tvar offy = (~~(Camera.py * 10) / 10);\n\t\t\tvar y = offy + i / 10;\n\t\t\tvar x = (~~(y * (y + 4.5) * (y + 3.8)) % 10) / 10;\n\t\t\tvar w = (y * y * y) % 0.2;\n\t\t\tvar hue = (y * y * (y * 1.5)) % 1;\n\t\t\td\n\t\t\t .circle([x, y], w)\n\t\t\t .hsv(hue, 0.1, 0.98)\n\t\t\t .fill()\n\t\t\t;\n\t\t});\n\n\t\tparticles.each(function(e) {\n\t\t\te.draw();\n\t\t});\n\n\t\tboxes.each(function(e) {\n\t\t\te.draw();\n\t\t});\n\n\t\td.restore();\n\n\t\twindow.setTimeout(arguments.callee, 16);\n\t})();\n};\n"},"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/f/F/2/fF2J_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/f/F/2/fF2J.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/f/F/2/fF2J_100.jpg"},"description_html":"","parent":{"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/b/I/L/bILV_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/b/I/L/bILV.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/b/I/L/bILV_100.jpg"},"modified_date":"2012-04-15 12:59:28","uid":"bILV","created_date":"2012-04-14 22:53:13","path":"bILV","description":"","statistic":{"forked":"1","favorite":"4","pageview":"2519"},"user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/b/4/2/c/b42cc3dd3312505b680411b3ead08e2dbc4192e4_100.jpg","name":"crispy"},"url":"http://jsdo.it/crispy/bILV","title":"trapezes--"},"modified_date":"2012-04-15 21:56:32","uid":"fF2J","created_date":"2012-04-15 21:50:00","path":"fF2J","description":"","statistic":{"forked":"1","favorite":"1","pageview":"2251"},"url":"http://jsdo.it/crispy/fF2J","user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/b/4/2/c/b42cc3dd3312505b680411b3ead08e2dbc4192e4_100.jpg","name":"crispy"},"title":"trapezes--++ forked: trapezes--"}