{"source":{"css":"body { background-color: #000000; margin: 0px; overflow: hidden; }","html":"<canvas id='world'></canvas>\n","lisence":"MIT","js":"// forked from t02uk's \"Ribon & Shabon\" http://jsdo.it/t02uk/o67P\nwindow.onload = function() {\n  \n  function Ribon() {\n    return this;\n  }\n  Ribon.prototype = {\n    capacity: 10,\n    init: function(ps, hue) {\n      this.born = [];\n      for(var i = 0; i < this.capacity; i++) {\n        this.born[i] = new Born(ps);\n        this.born[i].act();\n      }\n      this.hue = hue;\n\n      return this;\n    },\n    act: function() {\n     \n      var lhs = {x: px, y: py};\n      var rhs = this.born[0];\n        \n      var dx = lhs.x - rhs.x - rhs.sx;\n      var dy = lhs.y - rhs.y - rhs.sy;\n      \n      var direction = Math.atan2(dy, dx);\n      \n      rhs.sx += Math.cos(direction) * 0.005;\n      rhs.sy += Math.sin(direction) * 0.005;\n      \n      rhs.sx *= 0.99;\n      rhs.sy *= 0.99;\n\n      //if(rhs.x < 0 || 1 < rhs.x) {\n      //  rhs.x = ~~rhs.x;\n      //  rhs.sx *= -0.5;\n      //}\n      //if(rhs.y < 0 || 1 < rhs.y) {\n      //  rhs.y = ~~rhs.y;\n      //  rhs.sy *= -0.5;\n      //}\n\n      rhs.x += rhs.sx;\n      rhs.y += rhs.sy;\n      \n      for(var i = 1; i < this.capacity; i++) {\n        this.born[i].act();\n        this.born[i].x = (this.born[i-1].ox + this.born[i].x) / 2;\n        this.born[i].y = (this.born[i-1].oy + this.born[i].y) / 2;\n        this.born[i].sx = (this.born[i-1].x - this.born[i].x);\n        this.born[i].sy = (this.born[i-1].y - this.born[i].y);\n\n        if(Math.random() < 0.15 - i * 0.015) {\n          var sx = (-this.born[i].sx) * 0.3 + $R(-0.02, 0.02).randf();\n          var sy = (-this.born[i].sy) * 0.3 + $R(-0.02, 0.02).randf();\n          Ripple.registor(\n            {x: this.born[i].x,\n             y: this.born[i].y,\n             sx: sx,\n             sy: sy,\n             radius: 0.02 - i * 0.001,\n             hue: this.hue}\n          );\n        }\n      }\n      \n      rhs.act();\n      \n      return this;\n    },\n    draw: function(d) {\n\n      for(var i = 1; i < this.capacity; i++) {\n        var p1 = this.born[i-1];\n        var p2 = this.born[i];\n        \n        var s = 0.013 - i * 0.0015;\n        if(i === 1) s = 0.013 - 2 * 0.0015;\n        var t = 0.013 - (i + 1) * 0.0015;\n        var hue = this.hue;\n\n        var to = [\n          [p1.x + p1.ny * s, p1.y - p1.nx * s],\n          [p1.x - p1.ny * s, p1.y + p1.nx * s],\n          [p2.x - p2.ny * t, p2.y + p2.nx * t],\n          [p2.x + p2.ny * t, p2.y - p2.nx * t]\n        ];\n        \n        d\n         .alpha(1 - i / this.capacity * 0.9)\n         .blend(\"lighter\")\n         .transformTo([[0, 0], [s, 0], [s, s], [0, s]], to, function(d) {\n           d.gradient([0, s / 2], [s, s / 2], [\n             [0.0,  [hue, 0.0, 0.0].hsv()],\n             [0.3,  [hue, 0.4, 0.7].hsv()],\n             [0.5,  [hue, 0.0, 1.0].hsv()],\n             [0.7,  [hue, 0.4, 0.7].hsv()],\n             [1.0,  [hue, 0.0, 0.0].hsv()],\n           ])\n           .quads([[0, 0], [s, 0], [s, s], [0, s]])\n           .fill();\n         })\n      }\n      \n      return this;\n    }\n  };\n  \n  function Ripple(o) {\n    this.x = o.x;\n    this.y = o.y;\n    this.sx = o.sx;\n    this.sy = o.sy;\n    this.radius = o.radius;\n    this.hue = o.hue;\n    this.lineWidth = Math.random() * 0.03 + 0.02;\n    this.count = 0;\n  }\n  Ripple.items = [];\n  Ripple.registor = (function() {\n    var seq = 0;\n    var items = Ripple.items;\n    return function(o) {\n      var ret;\n      ret = items[seq] = new Ripple(o);\n      \n      seq++; seq &= 127;\n      \n      return ret;\n    };\n  })();\n  Ripple.prototype = {\n    act: function() {\n      this.x += this.sx;\n      this.y += this.sy;\n      \n      this.sx *= 0.95;\n      this.sy *= 0.95;\n      \n      return this;\n    },\n    draw: function(d) {\n      this.lineWidth -= 0.002;\n      if(this.lineWidth < 0) return;\n      d.hsv(this.hue, 0.7, 0.7)\n       .lineWidth(this.lineWidth)\n        .alpha(1.0)\n      \n      var hue = this.hue;\n\n      //d.circle(\n      //  [this.x, this.y],\n      //  this.radius\n      //).stroke();\n\n      if(this.radius > 0) {\n        d\n         .luminous([this.x, this.y], this.radius * 0.2, this.radius, [\n          [0.0,  [this.hue, 0.0, 1.0].hsv()],\n          [0.5,  [this.hue, 0.1, 0.9].hsv()],\n          [0.8,  [this.hue, 0.5, 0.3].hsv()],\n          [1.0,  [this.hue, 0.7, 0.5].hsv()]\n         ]).fill();\n      }\n\n      this.count++;\n      this.radius -= 0.002;\n      return this;\n    }        \n  };\n  \n\n  function Born(ps) {\n    this.x = ps.x || 0.0;\n    this.y = ps.y || 0.0;\n    this.sx = this.sy = 0.0;\n    return this;\n  }\n  Born.prototype = {\n    draw: function(d) {\n\n      var s = 0.1;\n      d.quads([\n        [this.x - s, this.y - s],\n        [this.x + s, this.y - s],\n        [this.x + s, this.y + s],\n        [this.x - s, this.y + s]\n      ]).fill().stroke();\n      return this;\n    },\n    act: function() {\n      \n      this.ox = this.x;\n      this.oy = this.y;\n      \n      var sp = Math.sqrt(this.sx * this.sx + this.sy * this.sy);\n      if(sp !== 0.0) {\n        this.nx = this.sx / sp;\n        this.ny = this.sy / sp;\n      } else {\n        this.nx = 0.0;\n        this.ny = 0.0;\n      }\n          \n      return this;\n    }\n  };\n  \n      \n  function Explode(o) {\n    this.x = o.x;\n    this.y = o.y;\n    this.size = 0.1;\n    this.sizeUp = $R(0.001, 0.2).randf();\n    this.count = 0;\n    this.height = $R(0.01, 0.1).randf() + ~~($R(0, 1.2).randf());\n    this.rad = $R(0, 1).randf().toRadian();\n    this.hue = $R(0.4, 0.7).randf();\n  }\n  Explode.prototype = {\n    act: function() {\n      this.count++;\n      if(this.count > 4) return {\n        act: function(){},\n        draw: function(){},\n      };\n\n      this.size += this.sizeUp += 0.01;\n      return this;\n    },\n    draw: function(d) {\n      var self = this;\n      var hue = this.hue;\n\n      d\n       .alpha(1.2 - this.count / 4)\n       .blend(\"lighter\")\n       .save()\n       .translate([self.x, self.y])\n       .rotate(self.rad)\n       .scale([1, self.height])\n       .luminous([0, 0], self.size * 0.1, self.size, [\n         [1.0,   [hue, 0.7, 1.0].hsv()],\n         [0.9,   [hue, 0.3, 0.5].hsv()],\n         [0.7,   [hue, 0.3, 0.2].hsv()],\n         [0.0,   [hue, 0.1, 0.1].hsv()]\n       ]).fill()\n       .restore()\n      ;\n\n      return this;\n    },\n  };\n  Explode.items = [];\n  Explode.registor = (function() {\n    var seq = 0;\n    var items = Explode.items;\n    return function(o) {\n      var ret;\n      ret = items[seq] = new Explode(o);\n      \n      seq++; seq &= 15;\n      \n      return ret;\n    };\n  })();\n  \n\n  var main = function() {\n    \n    window.px = 0.5;\n    window.py = 0.5;\n    document.addEventListener(\"mousemove\", function(e) {\n      px = e.clientX / d.width + d.left2d;\n      py = e.clientY / d.height + d.top2d;\n    }, false);\n    var lbclick = false;\n    window.addEventListener(\"mousedown\", function(e) {\n      lbclick = true;\n      for(var i = 0; i < $R(2, 5).rand(); i++) {\n        Explode.registor({\n                x:px,\n                y:py});\n      }\n      for(var i = 0; i < rs.length; i++) {\n        var r = rs[i];\n        var b = r.born[0];\n        var dist = Math.pow(b.x - px, 2) + Math.pow(b.y - py, 2);\n        var power = 1 / dist * 0.01;\n        if(power > 0.1) power = 0.1;\n\n        var rad = Math.atan2(px - b.x, py - b.y);\n        for(var j = 0; j < r.born.length; j++) {\n          var b = r.born[j];\n          b.sx += Math.cos(rad) * power;\n          b.sy += Math.sin(rad) * power;\n        }\n      }\n    }, false);\n  \n    var d = new DCore().init();\n  \n    var rs = [];\n    for(var i = 0; i < 7; i++) {\n      rs[i] = new Ribon().init(\n        {\n          x: Math.random(),\n          y: Math.random()\n        },\n        i / 7\n      );\n    }\n    (function() {\n      d.rgb(lbclick ? [160, 180, 200] : [10, 20, 30])\n        .alpha(1.0)\n          .blend(\"source-over\")\n            .fillBack();\n\n      for(var i = 0; i < rs.length; i++) {\n        var r = rs[i];\n        r.act().draw(d);\n      }\n      \n      for(var i = 0; i < 128; i++) {\n        var ripple = Ripple.items[i];\n        if(!ripple) continue;\n        ripple.act().draw(d);\n      }\n      for(var i = 0;i < 16; i++) {\n        var explode = Explode.items[i];\n        if(!explode) continue;\n        explode.act().draw(d);\n      }\n          \n      lbclick = false;\n      window.setTimeout(arguments.callee, 33);\n    \n    })();\n  };\n  \n  main();\n};\n\n"},"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/w/G/f/wGf6_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/w/G/f/wGf6.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/w/G/f/wGf6_100.jpg"},"description_html":"マウスカーソルに首ったけなホーミングレーザーに付きまとわれるだけ<br />\n・クリックで追い払う<br />\n<br />\n※Chromeなら動く<br />\n※Firefoxはローカルでのみ動くこと確認。jsdo.it上だと動かない。なぜ？","parent":{"thumbnail":{"wide":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/o/6/7/o67P_w.jpg","465":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/o/6/7/o67P.jpg","100":"http://jsdo-static-contents.s3.amazonaws.com/images/capture/o/6/7/o67P_100.jpg"},"modified_date":"2010-09-23 11:30:21","uid":"o67P","created_date":"2010-09-11 23:04:05","path":"o67P","description":"はじめてのHTML5","statistic":{"forked":"3","favorite":"3","pageview":"2433"},"user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/b/4/2/c/b42cc3dd3312505b680411b3ead08e2dbc4192e4_100.jpg","name":"crispy"},"url":"http://jsdo.it/crispy/o67P","title":"Ribon & Shabon"},"modified_date":"2011-01-31 23:29:07","uid":"wGf6","created_date":"2011-01-30 17:12:21","path":"wGf6","description":"マウスカーソルに首ったけなホーミングレーザーに付きまとわれるだけ\n・クリックで追い払う\n\n※Chromeなら動く\n※Firefoxはローカルでのみ動くこと確認。jsdo.it上だと動かない。なぜ？","statistic":{"forked":"1","favorite":"1","pageview":"1545"},"url":"http://jsdo.it/crispy/wGf6","user":{"icon":"http://jsdo-static-contents.s3.amazonaws.com/images/icon/b/4/2/c/b42cc3dd3312505b680411b3ead08e2dbc4192e4_100.jpg","name":"crispy"},"title":"laser & particle"}